stages:
  - build-staging-1
  - build-staging-2
  - deploy-staging
  - infra

### build-staging
build-backend-api-staging:
  stage: build-staging-1
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend/go"
      --dockerfile "${CI_PROJECT_DIR}/backend/go/Dockerfile-api"
      --destination "${CI_REGISTRY_IMAGE}/backend-api/staging:${CI_PIPELINE_IID}"
  only:
    - master
    - /^ci-.*$/

build-backend-scheduler-staging:
  stage: build-staging-2
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend/go"
      --dockerfile "${CI_PROJECT_DIR}/backend/go/Dockerfile-scheduler"
      --destination "${CI_REGISTRY_IMAGE}/backend-scheduler/staging:${CI_PIPELINE_IID}"
  only:
    - master
    - /^ci-.*$/

build-backend-transform-staging:
  stage: build-staging-2
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend/go"
      --dockerfile "${CI_PROJECT_DIR}/backend/go/Dockerfile-transform"
      --destination "${CI_REGISTRY_IMAGE}/backend-transform/staging:${CI_PIPELINE_IID}"
  only:
    - master
    - /^ci-.*$/

build-frontend-vue-staging:
  stage: build-staging-1
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - cp ${ENV_FRONTEND_VUE_STAGING} frontend/vue/.env
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend/vue"
      --dockerfile "${CI_PROJECT_DIR}/frontend/vue/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/frontend-vue/staging:${CI_PIPELINE_IID}"
  environment:
    name: staging
    url: http://staging.game.kube.atpstealer.com
  only:
    - master
    - /^ci-.*$/

### deploy-staging
frontend-vue-staging:
  stage: deploy-staging
  image: alpine/helm
  script:
    - helm upgrade --install frontend-vue-staging -n game
      --set-string application.image.version=${CI_PIPELINE_IID}
      -f ./deployment/helm/application/frontend-vue-staging-values.yaml
      --history-max 2
      ./deployment/helm/application
  only:
    - master
    - /^ci-.*$/

backend-api-staging:
  stage: deploy-staging
  image: alpine/helm
  script:
    - helm upgrade --install backend-api-staging -n game
      --set-string application.image.version=${CI_PIPELINE_IID}
      -f ./deployment/helm/application/backend-api-staging-values.yaml
      --history-max 2
      ./deployment/helm/application
  only:
    - master
    - /^ci-.*$/

backend-scheduler-staging:
  stage: deploy-staging
  image: alpine/helm
  script:
    - helm upgrade --install backend-scheduler-staging -n game
      --set-string cronjob.image.version=${CI_PIPELINE_IID}
      -f ./deployment/helm/scheduler/backend-scheduler-staging-values.yaml
      --history-max 2
      ./deployment/helm/scheduler
  only:
    - master
    - /^ci-.*$/

backend-transform-staging:
  stage: deploy-staging
  image: alpine/helm
  script:
    - helm upgrade --install backend-transform-staging -n game
      --set-string cronjob.image.version=${CI_PIPELINE_IID}
      -f ./deployment/helm/scheduler/backend-transform-staging-values.yaml
      --history-max 2
      ./deployment/helm/scheduler
  only:
    - master
    - /^ci-.*$/

### infra
minio:
  stage: infra
  image: alpine/helm
  script:
    - helm upgrade --install minio -n game
      --history-max 1
      ./deployment/helm/minio
  only:
    - master
    - /^ci-.*$/

mongodb:
  stage: infra
  image: alpine/helm
  script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
    - helm upgrade --install -n game
      mongodb bitnami/mongodb
      --history-max 1
      -f ./deployment/helm/mongo/values.yaml
  only:
    - master
    - /^ci-.*$/
